WEBVTT

1
00:00:17.152 --> 00:00:20.224
Hello and welcome back to cucumber School

2
00:00:20.736 --> 00:00:24.576
Last time we learned about two very different kinds of loops

3
00:00:25.088 --> 00:00:29.696
First Wiz datatables to Loop over dates in your scenarios

4
00:00:30.976 --> 00:00:33.280
Timberland about TTD Cycles

5
00:00:34.304 --> 00:00:38.656
We still have the outer loop of tdd helps you build the right thing

6
00:00:39.680 --> 00:00:43.520
Well the inner loop helps you build the thing right

7
00:00:45.056 --> 00:00:46.080
And this lesson

8
00:00:46.592 --> 00:00:49.408
We're going to teach you all about how to configure cucumber

9
00:00:50.432 --> 00:00:56.576
Let me start working on a new scenario we often take a dive down into the inner loop of tdd

10
00:00:57.088 --> 00:01:03.232
Very using unit testing tool to drive out new classes will modify the behavior of existing ones

11
00:01:03.488 --> 00:01:09.632
When I unit tested green and a new coat is implemented we return to the Cucumber

12
00:01:09.888 --> 00:01:14.496
Scenarios to verify whether we have made overall progress will not

13
00:01:16.032 --> 00:01:21.664
If we have lots of cucumber scenarios it can be distracting to run all of them each time we do this

14
00:01:22.176 --> 00:01:25.504
We often want to focus on a single scenario

15
00:01:25.760 --> 00:01:27.296
Pops just a couple

16
00:01:27.552 --> 00:01:30.624
To get feedback on what we currently working on

17
00:01:31.392 --> 00:01:33.952
There are several ways to do this in cucumber

18
00:01:34.208 --> 00:01:40.352
Probably the easiest way is to tell cucumber to run only a scenario with a particular name

19
00:01:42.400 --> 00:01:48.544
The name option tells cucumber to run Sunrise with a name matching message is to

20
00:01:48.800 --> 00:01:49.312
Long

21
00:01:49.568 --> 00:01:53.152
The value of this option is actually a regular expression

22
00:01:53.408 --> 00:01:57.248
So you can use your imagination had to run more than one scenario

23
00:01:58.016 --> 00:02:04.160
Another way to tell cucumber to run a specific scenario is to specify the line number of the scenario

24
00:02:04.416 --> 00:02:05.952
Within a feature file

25
00:02:11.840 --> 00:02:17.472
You can even specify multiple line numbers page file to run more than one scenario

26
00:02:18.752 --> 00:02:24.896
You can list several files on lines together like this if you have a specific set of scenarios you want to run

27
00:02:26.432 --> 00:02:30.784
Narrowing down the second scenario is to run like this is gold filtering

28
00:02:31.296 --> 00:02:35.136
Cucumber has a third filtering mechanism that uses tags

29
00:02:35.648 --> 00:02:37.696
Text start with a not sign

30
00:02:37.952 --> 00:02:42.048
What was the focus tag right here above this scenario

31
00:02:43.840 --> 00:02:47.680
Now we can run the scenario stacked with Focus

32
00:02:48.448 --> 00:02:49.728
I should only be one

33
00:02:51.776 --> 00:02:52.544
Yep

34
00:02:53.568 --> 00:02:55.872
It's entirely up to you what you name your text

35
00:02:56.128 --> 00:03:01.248
I'm at working on a particular area of the application is coming to use a temporary tag like this

36
00:03:01.504 --> 00:03:04.576
Remove at the Foley checkout code into Source control

37
00:03:05.600 --> 00:03:07.904
Tax can be used for other purposes as well

38
00:03:08.416 --> 00:03:13.280
If you have lots of scenarios they can be time-consuming to run them all every time

39
00:03:13.536 --> 00:03:19.680
For example you can take a few of them with smoke and run only those before you check in coats or

40
00:03:19.936 --> 00:03:20.448
Control

41
00:03:20.704 --> 00:03:26.080
This will give you a certain level of confidence and nothing is broken without having to run every single one

42
00:03:26.848 --> 00:03:31.200
If you're running cucumber on a CI continuous integration server as well

43
00:03:31.456 --> 00:03:37.088
You could run all the scenarios that detecting any other questions you might have missed by only running a smoke test

44
00:03:38.880 --> 00:03:45.024
Text give you a way to organize your scenario is that cuts across feature files you can think of them like sticky label

45
00:03:45.280 --> 00:03:49.120
You might point to a book to mock interesting pages that you want to refer back to

46
00:03:49.888 --> 00:03:56.032
Some teams also use tags to reference external documents for example tickets in an issue tracker

47
00:03:56.288 --> 00:03:57.056
Trepanning tool

48
00:03:57.824 --> 00:04:03.968
Let's Pretend We're using an issue tracker while working on charity idola Behavior we built so far is related to the

49
00:04:04.224 --> 00:04:05.504
Issue number 11

50
00:04:06.272 --> 00:04:10.112
We could talk the whole feature file with the single line at the top

51
00:04:10.880 --> 00:04:14.976
All the scenarios within that file now inherit that tag

52
00:04:16.000 --> 00:04:22.143
If you want to you can use more complex Thai Expressions to select the scenarios you want to run

53
00:04:22.399 --> 00:04:28.543
For example you could use a tight expression to exclude all the scenarios tactus slow

54
00:04:31.871 --> 00:04:35.967
Let's take a look at some of the other configuration options cucumber office

55
00:04:36.735 --> 00:04:42.879
If we possibly help option to cucumber it will exit immediately without running any scenario

56
00:04:43.135 --> 00:04:47.999
Imprint only available options along with some useful documentation

57
00:04:50.815 --> 00:04:54.143
Let's take a closer look at the plug-in option

58
00:04:55.167 --> 00:05:00.543
So far every time we've run cucumber it is printed the faces back to us in the console

59
00:05:01.055 --> 00:05:06.175
Cucumber can report results in apa format and this is useful for generating reports

60
00:05:06.687 --> 00:05:09.503
Let's try the HTML plugin

61
00:05:11.551 --> 00:05:17.695
Let me use the HDMI plug-in recently pending colon followed by the pass to the directory why we want the report to the

62
00:05:23.839 --> 00:05:25.119
Let's try another one

63
00:05:25.631 --> 00:05:26.655
Jason

64
00:05:28.191 --> 00:05:31.775
The Jason report outputs the results in a single file

65
00:05:32.031 --> 00:05:37.663
You can write your own script whole program to post-process this file to generate your own report

66
00:05:38.431 --> 00:05:43.039
Is also a progress for myself which just print out a single character for each step

67
00:05:43.807 --> 00:05:49.951
The J unit 4 matter how puts results in an XML format which many continuous integration service

68
00:05:50.207 --> 00:05:51.743
Does will turn into an ice report

69
00:05:55.839 --> 00:05:58.911
We can specify multiple for matters like this

70
00:06:01.215 --> 00:06:04.031
One of these formatted plugins is rather special

71
00:06:04.543 --> 00:06:06.335
The rerun format

72
00:06:06.847 --> 00:06:10.431
The food Chinatown let's make one of us in areas fail

73
00:06:12.991 --> 00:06:13.759
Right

74
00:06:14.015 --> 00:06:16.063
Choose the rerun formatter

75
00:06:16.319 --> 00:06:20.159
And send the output to a file called rerun. Text

76
00:06:21.951 --> 00:06:24.767
Let's look at what's in that Rerun. Text file

77
00:06:25.535 --> 00:06:27.839
It's a list of the scenarios that failed

78
00:06:28.351 --> 00:06:30.399
On the phone that looks familiar doesn't it

79
00:06:30.911 --> 00:06:34.239
It's using the line number filter full not we showed you earlier

80
00:06:35.519 --> 00:06:41.407
This is really useful when you have a few Fanning cenarios and you want to rerun only the ones that failed

81
00:06:42.175 --> 00:06:48.319
Bacon pasta cucumber the next time we run it simply by pretending and not sign in front of the path

82
00:06:50.367 --> 00:06:56.511
This is a big Time Saver when they are in the middle of a refactoring but you've broken a few scenarios on your working a cell

83
00:06:56.767 --> 00:06:57.791
Back to green

84
00:06:59.583 --> 00:07:05.727
The option will quickly tell you whether any of your steps are undefined

85
00:07:05.983 --> 00:07:07.519
It won't try to run any of them

86
00:07:08.031 --> 00:07:12.383
They can be useful to get quick feedback if you change the wording in your steps

87
00:07:13.919 --> 00:07:18.783
The strict option affects the exit status of cucumber

88
00:07:19.295 --> 00:07:22.879
To see how it works that's not an undefined step

89
00:07:25.951 --> 00:07:27.999
Fast fast run it without strict

90
00:07:30.559 --> 00:07:33.887
That last command tells us that cucumber didn't fail

91
00:07:34.143 --> 00:07:37.471
Exited with an exit status of 0

92
00:07:37.727 --> 00:07:39.775
Which means success

93
00:07:40.543 --> 00:07:42.335
Now that's running with strict

94
00:07:44.895 --> 00:07:47.199
This time the exes state has won

95
00:07:47.455 --> 00:07:49.759
Indicating that cucumber failed

96
00:07:50.783 --> 00:07:52.063
Why is this interesting

97
00:07:52.319 --> 00:07:58.463
Well if you run cucumber on a continuous integration server it will fail to build if there are undefined

98
00:07:58.719 --> 00:07:59.743
Depending steps

99
00:08:00.255 --> 00:08:01.791
That's pretty handy

100
00:08:02.815 --> 00:08:08.447
Cucumber is first and foremost a tool of facilitates a common understanding between people on a project

101
00:08:09.215 --> 00:08:11.263
Imagine our customers with cats

102
00:08:11.519 --> 00:08:15.871
We can write a fish in English but the cats would obviously not understand that

103
00:08:16.895 --> 00:08:20.735
Will know the cat speak low hat does English

104
00:08:21.247 --> 00:08:25.343
Sausage would have to look like this in order for cats to understand

105
00:08:28.159 --> 00:08:33.535
We tell cucumber what language to use by adding and language common to the top of the file

106
00:08:33.791 --> 00:08:39.935
Cucumber support service 60 different spoken languages thanks to contributions from people and cats

107
00:08:40.191 --> 00:08:41.215
Pull up the world

108
00:08:44.799 --> 00:08:50.943
You can get a list of all the supported languages with Dash Dash i18n

109
00:08:51.199 --> 00:08:51.711
Help

110
00:08:53.503 --> 00:08:59.647
To see the translation of gherkin keywords for particular language just replace help with the line

111
00:08:59.903 --> 00:09:00.671
Language code

112
00:09:00.927 --> 00:09:05.535
For example - - 18 hi

113
00:09:05.791 --> 00:09:06.815
Fendi

114
00:09:09.119 --> 00:09:14.751
It would be tedious if you had to write all these configuration options every time you run cucumber

115
00:09:15.263 --> 00:09:19.615
Make this easier you can write the options in a file that keep them will pick up

116
00:09:20.639 --> 00:09:26.783
The easiest ways to write the options down in a file cook cucumber. Properties that you place on the class pie

117
00:09:27.807 --> 00:09:33.951
Animehaven project this file should be in Source test results is cucumber

118
00:09:34.207 --> 00:09:34.975
Properties

119
00:09:35.999 --> 00:09:42.143
Justifying a single property code cucumber options and pass all the configuration options there

120
00:09:43.935 --> 00:09:49.055
Alternatively you can set all the configuration options using a Java annotation

121
00:09:50.335 --> 00:09:52.895
Let's take a look at run kicks test

122
00:09:55.455 --> 00:09:59.039
The Cucumber annotation tells junit to run cucumber

123
00:09:59.807 --> 00:10:05.695
The Cucumber options on atation of the corresponding property for each of the options you can pass the Cucumber

124
00:10:06.975 --> 00:10:10.815
If you forget what they are just run cucumber with the help option

125
00:10:11.583 --> 00:10:13.887
Tomato cucumber really useful to team

126
00:10:14.143 --> 00:10:17.471
It's good to spend time learning the details of how to configure it

127
00:10:18.239 --> 00:10:23.359
And this lesson we gave you a tour of almost all of cucumbers configuration options

128
00:10:24.383 --> 00:10:28.735
You learned how to filter scenarios by name line number what time

129
00:10:29.759 --> 00:10:32.063
You don't have to fool my cucumbers output

130
00:10:32.319 --> 00:10:36.159
And you don't have to write your scenarios in different spoken languages

131
00:10:37.439 --> 00:10:42.559
You will soon learn how to set up different configurations for use by a whole team

132
00:10:43.839 --> 00:10:46.143
That's all for this lesson of cucumber School

133
00:10:46.911 --> 00:10:48.191
See you next time
