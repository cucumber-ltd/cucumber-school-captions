WEBVTT

1
00:00:15.360 --> 00:00:19.712
BDD stands for Behavior Driven Development

2
00:00:20.480 --> 00:00:21.760
What does that mean

3
00:00:22.528 --> 00:00:24.832
What does it mean to do BDD?

4
00:00:26.368 --> 00:00:32.000
BDD is a process of exploring,
discovering, defining,

7
00:00:32.256 --> 00:00:36.352
And then finally driving out the
desired behavior of a software system

8
00:00:36.864 --> 00:00:38.400
Using conversations

9
00:00:38.656 --> 00:00:40.192
Concrete examples

10
00:00:40.448 --> 00:00:42.240
And automated-tests

11
00:00:43.520 --> 00:00:49.664
We use conversations about concrete
examples to explore, discover, 

11
00:00:47.000 --> 00:00:49.664
And finally illustrate our shared understanding

12
00:00:49.920 --> 00:00:52.224
Of the problem we need to solve
for our stakeholders

13
00:00:52.992 --> 00:00:53.504
Then

14
00:00:53.760 --> 00:00:59.904
We refine those examples into automated-tests that describe the desired behavior of our solution
 
15
00:01:00.160 --> 00:01:02.208
To drive the development of the system

16
00:01:03.744 --> 00:01:07.072
Cucumber is a tool facilitates BDD

17
00:01:07.840 --> 00:01:11.168
We can't teach you about Cucumber without teaching you about BDD, too

18
00:01:11.936 --> 00:01:13.728
So that's what we're going to start

19
00:01:16.800 --> 00:01:19.872
Let's start by defining what we mean by a concrete example

20
00:01:20.640 --> 00:01:24.480
Can you think of a concrete example of the last time you used a piece of software?

21
00:01:24.992 --> 00:01:30.368
Maybe an app you often use on your smartphone or something you use on a daily basis on your desktop computer

22
00:01:31.136 --> 00:01:32.928
Write down your example

23
00:01:35.488 --> 00:01:36.000
Now

24
00:01:36.512 --> 00:01:42.656
I've got no way to tell from here inside this video but I'd be willing to bet that you didn't give me a

25
00:01:42.912 --> 00:01:45.984
Concrete example of you using the software

26
00:01:46.752 --> 00:01:50.080
You just wrote down the name of the program or the app you were using

For example, maybe you wrote down Twitter


27
00:01:57.248 --> 00:01:58.016
Let's try again

28
00:01:58.784 --> 00:02:04.928
Give me a concrete example of the last time you used Twitter

29
00:02:05.184 --> 00:02:05.952
Or whatever the app was you had in mind

Ready? Go!

30
00:02:09.536 --> 00:02:10.304
Let's see

31
00:02:10.816 --> 00:02:15.424
Did you just write down a concrete example with details of what you were trying to do at the time

32
00:02:15.680 --> 00:02:16.960
And why you use the app?

33
00:02:17.984 --> 00:02:20.544
Or did you just write down the name of the feature

34
00:02:21.568 --> 00:02:22.336
Like

35
00:02:22.848 --> 00:02:25.152
Read my messages on Twitter

36
00:02:27.200 --> 00:02:31.040
This is still too abstract getting concrete is hard

37
00:02:31.552 --> 00:02:34.624
If you just wrote down the name of the feature I want you to try again

38
00:02:35.136 --> 00:02:37.696
Visualize a real moment in your life

39
00:02:37.952 --> 00:02:39.232
When you use that feature

40
00:02:39.488 --> 00:02:42.304
Tell me about it every Last Detail

41
00:02:45.120 --> 00:02:46.144
Here's my example

42
00:02:46.912 --> 00:02:50.240
Yesterday I was waiting for my regular train home from work

43
00:02:51.264 --> 00:02:57.408
I have a half hour commute so I like to have something to read on the train 


44
00:02:57.664 --> 00:02:58.944
Because the train goes to a rural area where the mobile signal is bad

45
00:02:59.456 --> 00:03:02.528
I scan my Twitter feed and fired up a browser tab

46
00:03:03.040 --> 00:03:06.368
With interesting looking articles to read before I get on the train

47
00:03:07.904 --> 00:03:12.000
Most of the articles are about software development, but there were a couple about politics, too

48
00:03:12.512 --> 00:03:16.352
Now we're talking

we have a concrete example with loads of context

49
00:03:17.120 --> 00:03:18.912
That really gives us something to work with

50
00:03:19.936 --> 00:03:21.728
Now we're going to see how we use

51
00:03:21.984 --> 00:03:24.544
These concrete examples in practice

52
00:03:25.056 --> 00:03:27.360
A prerequisite for doing BDD

53
00:03:27.616 --> 00:03:30.176
Is to have an agile process in place

54
00:03:31.200 --> 00:03:34.016
BBD needs to be done just in time at the

55
00:03:34.272 --> 00:03:35.808
Last responsible moment

56
00:03:36.064 --> 00:03:40.672
Because we place a lot of emphasis on conversations rather than trying to write everything down

57
00:03:41.696 --> 00:03:44.768
If you try to have those conversations too far ahead of doing the work

58
00:03:45.024 --> 00:03:47.584
You'll have forgotten most of what you talked about

59
00:03:49.376 --> 00:03:53.472
So you need to have your work already broken down into user stories

60
00:03:53.728 --> 00:03:57.568
Ideally, you'll have also started to define acceptance criteria

61
00:03:57.824 --> 00:03:59.616
Or business rules for the stories

62
00:04:00.640 --> 00:04:02.176
But they don't need to be exhaustive yet

63
00:04:02.688 --> 00:04:05.248
Will flesh them out during the BBD process

64
00:04:06.528 --> 00:04:11.904
Let's imagine we're building a point-of-sale system to an Electronics retailer Dixies

65
00:04:12.928 --> 00:04:14.464
Here's our next user story

66
00:04:14.720 --> 00:04:20.863
Process refunds: in order to satisfy customers statutory rights, as an assistant

67
00:04:21.119 --> 00:04:22.911
I need to be able to process refunds

68
00:04:24.191 --> 00:04:28.031
In order to prepare this story for development we have what we call

69
00:04:28.287 --> 00:04:30.335
A Three Amigos meeting

70
00:04:30.847 --> 00:04:33.407
We call it the Three Amigos because it involves

71
00:04:33.663 --> 00:04:35.711
Three different disciplines from the team

72
00:04:36.735 --> 00:04:37.503
Test

73
00:04:38.015 --> 00:04:39.039
Development

74
00:04:39.551 --> 00:04:40.575
And product

75
00:04:41.855 --> 00:04:43.391
Let's watch one in action

76
00:04:44.415 --> 00:04:46.719
The business rules to this story really simple

77
00:04:46.975 --> 00:04:51.327
Any item can be returned within 14 days as long as the customer has a receipt

78
00:04:51.583 --> 00:04:53.119
Can you give me an example?

79
00:04:53.375 --> 00:04:53.887
Okay

80
00:04:54.143 --> 00:04:57.471
Collin the customer bought a kettle last week from us

81
00:04:57.727 --> 00:05:02.591
When he got home he realized the color didn't match his kitchen cabinets and he really didn't like it

82
00:05:02.847 --> 00:05:06.175
Um, he's brought it back to the store for refund

83
00:05:06.687 --> 00:05:12.831
He walks up to Sally, a junior sales assistant, and he asks her to process the refund

84
00:05:13.087 --> 00:05:15.391
What's the outcome here?
What are we supposed to test?

85
00:05:15.903 --> 00:05:20.767
Well we need to increment the stock quantity for that item

86
00:05:21.023 --> 00:05:23.327
So we know it's back in our inventory

87
00:05:23.583 --> 00:05:27.679
Ah right, anything else?

No, no, I think that's all

88
00:05:27.935 --> 00:05:30.239
What if Collin doesn't have his receipt?

89
00:05:30.751 --> 00:05:36.895
Does Sally have to send him home?

Well a manager can process a refund with any proof of purchase

90
00:05:37.407 --> 00:05:40.479
Collin could use a bank statement for example

91
00:05:40.735 --> 00:05:44.831
But Sally can't do that so she would have to ask her boss

92
00:05:45.087 --> 00:05:50.463
Right, so there are two rules here: The customer must have proof of purchase, not just a receipt

93
00:05:50.719 --> 00:05:56.607
And if they don't have their receipt that it must be authorized by a manager, right?

94
00:05:57.119 --> 00:05:59.423
Aren't we forgetting something here?

95
00:06:00.191 --> 00:06:02.239
Isn't Collin supposed to get his money back?

96
00:06:02.751 --> 00:06:08.895
Oh! Uh, oh yes of course!

And does the system need to notify anyone in the warehouse to come  pick up the kettle?

97
00:06:10.687 --> 00:06:16.831
Good idea, Tammy. Yes, I think that's out of our scope for this version of the story but. 

98
00:06:17.087 --> 00:06:18.879
I'll put it on the backlog for something future iteration

99
00:06:22.463 --> 00:06:26.815
As you can see the Three Amigos meeting raises lots of questions

100
00:06:27.583 --> 00:06:31.935
It's a really useful way to discover assumptions and potential misunderstandings

101
00:06:32.447 --> 00:06:37.311
It is also a great way to communicate requirements that somebody might have thought about

102
00:06:37.567 --> 00:06:40.639
But never explained clearly to other people on the team

103
00:06:41.663 --> 00:06:45.759
Sometimes the Three Amigos will hit a question that nobody in the room knows the answer to

These are also a valuable output from the meeting

104
00:06:49.599 --> 00:06:52.159
Now you have a picture of what you know and

105
00:06:53.695 --> 00:06:54.975
What you need to find out

106
00:06:56.767 --> 00:07:01.375
Talking through examples is a great way to get everyone on the same page about what needs to be built

107
00:07:02.911 --> 00:07:05.983
One all Three Amigos are happy that they understand the story

108
00:07:06.239 --> 00:07:10.335
then you can stop translating your examples into something that Cucumber can understand

109
00:07:11.871 --> 00:07:14.687
Here's one of our examples written out in Gherkin

110
00:07:14.943 --> 00:07:17.247
The specification language for Cucumber

111
00:07:19.807 --> 00:07:20.831
As you can see

112
00:07:21.087 --> 00:07:23.135
Gherkin's almost like plain English

113
00:07:23.647 --> 00:07:28.255
Have to use a few special key words

So that Cucumber can understand it, too

114
00:07:29.023 --> 00:07:33.119
Words like feature, scenario, given, when, and then

You'll learn all about these soon

115
00:07:37.471 --> 00:07:45.919
We can refine as many examples as we need into this form to create an executable specification for our software

118
00:07:46.943 --> 00:07:47.967
In the next lesson

119
00:07:48.223 --> 00:07:51.295
You'll learn how to create your first Cucumber scenario

120
00:07:51.551 --> 00:07:52.575
And execute it
